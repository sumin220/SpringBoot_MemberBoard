@startuml

hide footbox
autoactivate on

' 스타일 설정
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontSize 12
skinparam defaultFontName Arial
skinparam activityBackgroundColor #EFEFEF
skinparam activityBorderColor #CCCCCC
skinparam sequenceArrowThickness 2
skinparam sequenceParticipantBorderThickness 1
skinparam sequenceParticipantBackgroundColor #FFFFFF
skinparam sequenceLifeLineBorderColor #000000
skinparam sequenceLifeLineBackgroundColor #FFFFFF
skinparam noteBackgroundColor #FFFFCC
skinparam noteBorderColor #000000

participant "Client" as C
participant "Server" as S
participant "Auth Module" as AM
participant "회원 관리" as MM
participant "Database" as DB

group 유저 정보 수정
    autonumber 1 "(0)"
    C -> S: PUT /api/v1/user 요청 (수정 데이터 포함)
    S -> AM: JWT 토큰 검증 요청
    AM -> AM: 토큰 유효성 확인
    alt 토큰 유효
        AM --> S: 인증 성공 (userId 반환)
        S -> MM: 유저 정보 수정 요청 (userId, 수정 데이터)
        MM -> MM: 요청 데이터 검증 (이름, 이메일 등)
        alt 데이터 유효
            MM -> DB: SELECT * FROM members WHERE id = userId
            DB --> MM: 유저 데이터 반환
            alt 유저 존재
                MM -> DB: UPDATE members SET name = ..., email = ... WHERE id = userId
                DB --> MM: 수정 성공
                MM --> S: 수정된 유저 데이터
                S --> C: 200 OK (수정 성공)
            else 유저 없음
                MM --> S: 유저 없음 오류
                S --> C: 404 Not Found (유저 없음)
            end
        else 데이터 유효하지 않음
            MM --> S: 데이터 검증 실패
            S --> C: 400 Bad Request (잘못된 요청)
        end
    else 토큰 유효하지 않음
        AM --> S: 인증 실패
        S --> C: 401 Unauthorized (인증 실패)
    end
end

note right of C: 클라이언트는 사용자 또는 애플리케이션을 나타냅니다.
note left of S: 서버는 백엔드 시스템을 나타냅니다.
note left of MM: 회원 관리: 회원 관련 작업 처리

@enduml